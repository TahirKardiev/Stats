# 1)Даны значения величины заработной платы заемщиков банка (zp) и значения их поведенческого кредитного скоринга (ks):
# zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
# ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
# Найдите ковариацию этих двух величин с помощью элементарных действий, а затем с помощью функции cov из numpy
# Полученные значения должны быть равны.
# Найдите коэффициент корреляции Пирсона с помощью ковариации и среднеквадратичных отклонений двух признаков,
# а затем с использованием функций из библиотек numpy и pandas.
import numpy as np
import scipy.stats as stats
zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])
cov = np.mean(zp*ks) - np.mean(zp) * np.mean(ks)
# print(cov) 9157.839999999997
# print(np.cov (zp, ks)) [[ 3882.93333333 10175.37777778]
#   [10175.37777778 33854.32222222]]
coefcor1 = cov / (np.std(zp, ddof = 1) * np.std(ks, ddof = 1)) #Несмещенный коэфициент корреляции
coefcor0 = cov / (np.std(ks, ddof = 0) * np.std(zp, ddof = 0)) #Смещенный коэфициент корреляции
coefcor1_function = 10175.37777778 / (np.std(zp, ddof = 1) * np.std(ks, ddof = 1)) #Несмещенный коэфициент корреляции со значением из фннкции
coefcor0_function = 10175.37777778 / (np.std(ks, ddof = 0) * np.std(zp, ddof = 0)) #Смещенный коэфициент корреляции со значением из фннкции
print (coefcor0, "|", coefcor1, "|", coefcor0_function, "|", coefcor1_function, "|", np.corrcoef (zp, ks))
# 0.8874900920739158 | 0.7987410828665242 | 0.9861001023045667 | 0.88749009207411 | [[1.         0.88749009]
#  [0.88749009 1.        ]]
